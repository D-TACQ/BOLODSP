#!/usr/bin/expect
# This script converts a drive frequency in Hz into a STEP_SIZE register value,
# and writes it to the correct knob
# It assumes there is only one DSP module, and that it is the BOLO8DSP module

# The waveform generation relies on an accumulator incrementing the read
# address of a ROM containing the waveform. The accumulator has a fixed
# width, and the top 10 bits are sliced off to use as the address. The rate
# at which the accumulator increments is determined by the AXI clock frequency
# and the step size, and the output frequency is determined by the rate at which
# the accumulator loops (as determined by the bit width) and the step size.

# N.B. Ideally there would be a way of determining which AXI clock frequency was
# being used at runtime. But for now it can be changed here if needed:
set fclk 1e8; # 1.25e8 on newer systems

if { $argc != 1 } {
    puts "Usage: $argv0 <fdrive>"
    exit
}
# Convert fdrive from scientific notation if required
set fdrive [ expr { [lindex $argv 0] } ]
set acc_width 27; # Number of bits in FPGA accumulator
set step [ expr { $fdrive * 2.0**$acc_width / $fclk } ]
# The step size to the step size register
set fd [ open /dev/dsp1/STEP_SIZE w ]
puts $fd $step
close $fd

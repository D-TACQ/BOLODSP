#!/bin/sh

CUSTOM=/mnt/local/sysconfig/bolodsp.sh

[ -e $CUSTOM ] && source $CUSTOM

MDIR=/usr/local/lib/modules
/sbin/insmod $MDIR/debugfs2.ko
/sbin/insmod $MDIR/regfs.ko
/sbin/insmod $MDIR/acq400_dspfs.ko
ln -s /sys/kernel/debug/dsp1/ /dev/dsp1

for site in /dev/sites/?
do
	source $site/details
	if [ "$FRU_PROD_NAME" = "BOLO8BLF" ]; then
		caldef=$site/caldef.xml
		nc=$(xml_lookup --config=$caldef 
			ACQ.AcqCalibration.Data.@AICHANXXX)
		if [ "$nc" != "24" ]; then
			echo "creating 24 channel caldef"
			cp /usr/local/CARE/BOLO/caldef-24.xml $caldef
		fi
	fi
done
cat /usr/local/CARE/BOLO/bolo8dsp-regdef >/dev/dsp1/.create
mkdir /etc/acq400/14/
ln -s /dev/dsp1/* /etc/acq400/14/
grep dsp /proc/devices | /usr/local/CARE/BOLO/build_dsp_nodes
ls -l /dev/dsp1.*


echo "DSP sites 14, 15 active on 4234, 4235"

# There will be one directory per active BOLO8 in /dev/bolo8.
# Each site has 8 physical channels
N_ACTIVE_SITES=$(find /dev/bolo8 -mindepth 1 -maxdepth 1 -type d | wc -l)
let NCHAN="$N_ACTIVE_SITES*8"
NDATAPERCHAN=3
let NC="$NDATAPERCHAN*$NCHAN"
NCM=3 # Number of output channels per physical channel

let ncr=$NCHAN
let site=1
while [ $ncr -gt 0 ]; do
	let ncx=$(cat /etc/acq400/$site/NCHAN)
	# update to effective number of channels
	let encx="$ncx*$NCM"
	echo "Allocating site $site ncx=$ncx encx=$encx"
	echo $encx > /etc/acq400/$site/NCHAN
	echo $encx > /etc/acq400/$site/active_chan
	# site 1 must be set to !data32 to feed 16 bit data to DSP
	# but EPICS must be set for LONGS to plot the 32 bit data from
	# DSP, so fake it
	rm /etc/acq400/$site/data32
	echo 1 >/etc/acq400/$site/data32

	let ncr=$ncr-$ncx
	let site=site+1
done

TI=/mnt/local/sysconfig/transient.init
GOOD="COOKED=0 NSAMPLES=100000 NCHAN=$NC TYPE=LONG"
grep -q "^$GOOD" $TI
[ $? -eq 0 ] || (
	sed -ie '/COOKED/d' $TI
	sed -ie "1i$GOOD" $TI
)
# Add additional knobs not directly connected to registers
/usr/local/CARE/BOLO/make_bolodsp_knobs

# Set up AO to use sideport
SITES=
for site in 1 2 3 4 5 6
do
	MT=/etc/acq400/$site/MTYPE
	if [ -e $MT ] && [ "$(cat $MT)" = "64" ]; then
		if [ "$SITES" != "" ]; then
			SITES=$SITES,$site
		else
			SITES=$site
		fi
		# Set DSP mode: low latency, long word data, FIFO enabled
		set.site $site bolo_dsp_enable=1
	fi
done
set.site 0 distributor sites=$SITES

# Reset the offset DACs to clear anything they may have in their
# registers after the change to sideport mode
echo 1 | tee /dev/bolo8/*/OS_DAC_RESETn > /dev/null
sleep 0.1
echo 0 | tee /dev/bolo8/*/OS_DAC_RESETn > /dev/null

# Correct operation of the calibration procedure requires
# that the main DAC is set to 40Vpp output
echo 1 | tee /dev/bolo8/*/DAC_RANGE > /dev/null # 40Vpp output
# Correct operation of the DSP procedure does not require
# particular gain settings (though 1V25 is recommended).
# Postpone these to rc.user

# Set the drive frequency to 20kHz, to allow the sensors to reach thermal
# equilibrium. The frequency can be changed later (including in rc.user)
# if desired
set.fdrive 20000

set.sys /sys/module/acq420fmc/parameters/FIFERR 0

/usr/local/init/acq400_knobs.init start

/usr/local/bin/monitor_dsp1 2>&1 >/dev/null  &

